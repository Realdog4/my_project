version: '3'

services:
  backend:
    build: ./
    container_name: autoshipping_container
    working_dir: /autoshipping
    ports:
      - ${LOCAL_PORT}:${WSGI_PORT}
    command:
      - ./commands/start_server_${MODE}.sh
    volumes:
      - ./src:/autoshipping/src
      - ./commands:/autoshipping/commands
      - static_content:/autoshipping/src/static
      - media_content:/autoshipping/src/media
    env_file:
      - .env
    depends_on:
      - postgres

  postgres:
    image: postgres:12
    ports:
      - 5432:5432
    volumes:
      - pg_data:/var/lib/postgresql/data
    env_file:
      - .env

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin_container
    restart: on-failure
    env_file:
      - .env
    ports:
      - 5000:80
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres

  mongodb:
    image: mongo:3-stretch
    container_name: mongo_db_container
    command: [ "--bind_ip_all", "--smallfiles" ]
    ports:
      - 27017:27017
    volumes:
      - mongo_data:/data/db
    env_file:
      - .env
    restart: on-failure

  nginx:
    image: nginx:1.19
    volumes:
      - static_content:/autoshipping/src/static
      - media_content:/autoshipping/src/media
      - ./nginx:/etc/nginx/conf.d
    ports:
      - 80:80
      - 443:443
    env_file:
      - .env
    depends_on:
      - backend

  redis:
    image: redis
    container_name: redis-container
    env_file:
      - .env
    restart: on-failure
    depends_on:
      - backend

  celery:
    build: ./
    container_name: celery-container
    command:
      - ./commands/start_celery.sh
    restart: on-failure
    volumes:
      - ./src:/autoshipping
      - ./commands:/autoshipping/commands
    env_file:
      - .env
    depends_on:
      - redis
      - backend

  elerybeat:
    build: ./
    container_name: celerybeat-container
    command:
      - ./commands/start_celerybeat.sh
    restart: on-failure
    volumes:
      - ./src:/autoshipping
      - ./commands:/autoshipping/commands
    env_file:
      - .env
    depends_on:
      - redis
      - backend

  flower:
    build: ./
    container_name: flower-container
    volumes:
      - ./src:/autoshipping
    env_file:
      - .env
    command: celery -A config flower --broker=redis://redis
    ports:
      - 5556:5555
    depends_on:
      - celery

  redisadmin:
    image: redislabs/redisinsight
    container_name: redisadmin
    hostname: redisadmin
    restart: on-failure
    ports:
      - 8001:8001
    env_file:
      - .env

volumes:
  static_content: { }
  media_content: { }
  pg_data: { }
  pgadmin_data: { }
  mongo_data: { }
